// Generated by view binder compiler. Do not edit!
package com.orbaic.miner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.orbaic.miner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityReferralDataBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView backButtonRef;

  @NonNull
  public final LinearLayout linearLayout5;

  @NonNull
  public final RecyclerView refRec;

  @NonNull
  public final ImageView refreshButton;

  private ActivityReferralDataBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView backButtonRef, @NonNull LinearLayout linearLayout5,
      @NonNull RecyclerView refRec, @NonNull ImageView refreshButton) {
    this.rootView = rootView;
    this.backButtonRef = backButtonRef;
    this.linearLayout5 = linearLayout5;
    this.refRec = refRec;
    this.refreshButton = refreshButton;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityReferralDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityReferralDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_referral_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityReferralDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButtonRef;
      ImageView backButtonRef = ViewBindings.findChildViewById(rootView, id);
      if (backButtonRef == null) {
        break missingId;
      }

      id = R.id.linearLayout5;
      LinearLayout linearLayout5 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout5 == null) {
        break missingId;
      }

      id = R.id.ref_rec;
      RecyclerView refRec = ViewBindings.findChildViewById(rootView, id);
      if (refRec == null) {
        break missingId;
      }

      id = R.id.refreshButton;
      ImageView refreshButton = ViewBindings.findChildViewById(rootView, id);
      if (refreshButton == null) {
        break missingId;
      }

      return new ActivityReferralDataBinding((RelativeLayout) rootView, backButtonRef,
          linearLayout5, refRec, refreshButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
