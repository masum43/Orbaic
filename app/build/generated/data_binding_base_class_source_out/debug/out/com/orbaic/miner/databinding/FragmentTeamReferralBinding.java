// Generated by view binder compiler. Do not edit!
package com.orbaic.miner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.orbaic.miner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTeamReferralBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView codeRef;

  @NonNull
  public final TextView codeSubmit;

  @NonNull
  public final ImageView imageView7;

  @NonNull
  public final EditText inputCode;

  @NonNull
  public final LinearLayout linearLayout10;

  @NonNull
  public final LinearLayout linearLayout13;

  @NonNull
  public final TextView shareButton;

  @NonNull
  public final TextView teamMemberShow;

  @NonNull
  public final TextView textView12;

  @NonNull
  public final TextView textView14;

  @NonNull
  public final TextView textView15;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final TextView totalMember;

  private FragmentTeamReferralBinding(@NonNull ConstraintLayout rootView, @NonNull TextView codeRef,
      @NonNull TextView codeSubmit, @NonNull ImageView imageView7, @NonNull EditText inputCode,
      @NonNull LinearLayout linearLayout10, @NonNull LinearLayout linearLayout13,
      @NonNull TextView shareButton, @NonNull TextView teamMemberShow, @NonNull TextView textView12,
      @NonNull TextView textView14, @NonNull TextView textView15, @NonNull TextView textView3,
      @NonNull TextView textView6, @NonNull TextView totalMember) {
    this.rootView = rootView;
    this.codeRef = codeRef;
    this.codeSubmit = codeSubmit;
    this.imageView7 = imageView7;
    this.inputCode = inputCode;
    this.linearLayout10 = linearLayout10;
    this.linearLayout13 = linearLayout13;
    this.shareButton = shareButton;
    this.teamMemberShow = teamMemberShow;
    this.textView12 = textView12;
    this.textView14 = textView14;
    this.textView15 = textView15;
    this.textView3 = textView3;
    this.textView6 = textView6;
    this.totalMember = totalMember;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTeamReferralBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTeamReferralBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_team_referral, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTeamReferralBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.codeRef;
      TextView codeRef = ViewBindings.findChildViewById(rootView, id);
      if (codeRef == null) {
        break missingId;
      }

      id = R.id.codeSubmit;
      TextView codeSubmit = ViewBindings.findChildViewById(rootView, id);
      if (codeSubmit == null) {
        break missingId;
      }

      id = R.id.imageView7;
      ImageView imageView7 = ViewBindings.findChildViewById(rootView, id);
      if (imageView7 == null) {
        break missingId;
      }

      id = R.id.inputCode;
      EditText inputCode = ViewBindings.findChildViewById(rootView, id);
      if (inputCode == null) {
        break missingId;
      }

      id = R.id.linearLayout10;
      LinearLayout linearLayout10 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout10 == null) {
        break missingId;
      }

      id = R.id.linearLayout13;
      LinearLayout linearLayout13 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout13 == null) {
        break missingId;
      }

      id = R.id.share_button;
      TextView shareButton = ViewBindings.findChildViewById(rootView, id);
      if (shareButton == null) {
        break missingId;
      }

      id = R.id.teamMemberShow;
      TextView teamMemberShow = ViewBindings.findChildViewById(rootView, id);
      if (teamMemberShow == null) {
        break missingId;
      }

      id = R.id.textView12;
      TextView textView12 = ViewBindings.findChildViewById(rootView, id);
      if (textView12 == null) {
        break missingId;
      }

      id = R.id.textView14;
      TextView textView14 = ViewBindings.findChildViewById(rootView, id);
      if (textView14 == null) {
        break missingId;
      }

      id = R.id.textView15;
      TextView textView15 = ViewBindings.findChildViewById(rootView, id);
      if (textView15 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      id = R.id.totalMember;
      TextView totalMember = ViewBindings.findChildViewById(rootView, id);
      if (totalMember == null) {
        break missingId;
      }

      return new FragmentTeamReferralBinding((ConstraintLayout) rootView, codeRef, codeSubmit,
          imageView7, inputCode, linearLayout10, linearLayout13, shareButton, teamMemberShow,
          textView12, textView14, textView15, textView3, textView6, totalMember);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
